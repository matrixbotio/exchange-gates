// Code generated by mockery v2.32.4. DO NOT EDIT.

package workers

import mock "github.com/stretchr/testify/mock"

// MockPriceEventCallback is an autogenerated mock type for the PriceEventCallback type
type MockPriceEventCallback struct {
	mock.Mock
}

type MockPriceEventCallback_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPriceEventCallback) EXPECT() *MockPriceEventCallback_Expecter {
	return &MockPriceEventCallback_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: event
func (_m *MockPriceEventCallback) Execute(event PriceEvent) {
	_m.Called(event)
}

// MockPriceEventCallback_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockPriceEventCallback_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - event PriceEvent
func (_e *MockPriceEventCallback_Expecter) Execute(event interface{}) *MockPriceEventCallback_Execute_Call {
	return &MockPriceEventCallback_Execute_Call{Call: _e.mock.On("Execute", event)}
}

func (_c *MockPriceEventCallback_Execute_Call) Run(run func(event PriceEvent)) *MockPriceEventCallback_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(PriceEvent))
	})
	return _c
}

func (_c *MockPriceEventCallback_Execute_Call) Return() *MockPriceEventCallback_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockPriceEventCallback_Execute_Call) RunAndReturn(run func(PriceEvent)) *MockPriceEventCallback_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockPriceEventCallback creates a new instance of MockPriceEventCallback. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPriceEventCallback(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPriceEventCallback {
	mock := &MockPriceEventCallback{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
